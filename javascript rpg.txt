javascript rpg - Gladiator

choose character class - Sword and shield / 2 hand / agile net and trident DONE
choose stats - health / strength / dexterity / defense DROP IDEA FOR NOW
each stat uses a formula to calculate effectiveness (d&d rules?) NOT DONE

menu on left with buttons. show char sheet / shop / other things DONE
img under menu - outline of person showing equipment DROP IDEA FOR NOW

series of encounters - get xp and level up. go through dungeons. fight bosses.
roman arena? or elder scrolls style? ROMAN ARENA

PLAYER CHAR	BATTLE OPTIONS	   ENEMY
EQUIPMENT	BATTLE OPTIONS	   EQUIPMENT
		BATTLE OPTIONS

PLAYER STATS			   ENEMY STATS



enemies - levelled groups (0-5), (6-10)  etc. each group has stats chosen randomly within a range. 

combat flavour text - attack / defend / feint moves each connect with an array of possible flavor text lines. use random picker function from silly story generator to randomly choose an array line.

keep track of lifetime stats - total kills, damage dealt, damage received, etc

HUMANS objects - person (name, class, level, stats, equipment)
		>> enemy types(inherit from person) 		DONE
EQUIPMENT objects - gear (attack, defense, dexterity)		NOT DONE
		>> weapon types(inherit)
		armor types(inherit)

name = comes from arrays of first and last names, randomly chosen DONE
class = myrmidon, bruiser, defender, barbarian, hoplite. TO BEGIN: only myrmidon, barbarian, hoplite DONE 
level = this starts at 1 and updates when xp is gained IN PROGRESS
stats = object literal eg attack: 5 			DONE
equipment = object literal eg head: iron helmet (this is an equipment object) DONE

TODO - newgame function = click newgame button > empties innerHTML of main div. replaces it with: enter name, choose class, assign stats. when finished, main div is populated. DONE

create Enemy class + constructor. populate enemy window with generated Enemy instance. Use random numbers to choose class and stats of enemy. DONE

add buttons to show enemy stats and equipment. add a 'hub' to the main window. add hub buttons for different areas eg tavern, training pit, quartermaster, infirmary. add big button at bottom - 'next fight' DONE

create hub areas. flavour text for each area. Merge displayFunctions into one displayHubArea(area) function. AREAS DONE. FUNCTION STILL TO DO. 

start implementing combat system. attack / defend / feint, each with a percentage chance of success calculated by checking player's strength / defense / dexterity against opponent's.
attack = dexterity vs defence.
defend = defence vs dexterity.
feint = dexterity vs dexterity.



if(hit) {
  damage = (randomNumber(strength - 3, strength + 3) / strength) * 5.
  enemy.hp - damage
}
